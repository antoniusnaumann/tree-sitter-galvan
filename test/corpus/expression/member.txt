=====================================
Member field access
=====================================

main {
  member.field
}
---
(source
  (main
    (main_keyword)
    (body
      (brace_open)
      (statement
        (expression
          (member_expression
            (expression
              (ident))
            (member_call_operator)
            (expression
              (ident)))))
      (brace_close))))

=====================================
Chained member field access
=====================================

main {
  member.field.other_field
}
---
(source
  (main
    (main_keyword)
    (body
      (brace_open)
      (statement
        (expression
          (member_expression
            (expression
              (member_expression
                (expression
                  (ident))
                (member_call_operator)
                (expression
                  (ident))))
            (member_call_operator)
            (expression
              (ident)))))
      (brace_close))))

=====================================
Member function call
=====================================

main {
  member.call()
}
---
(source
  (main
    (main_keyword)
    (body
      (brace_open)
      (statement
        (expression
          (member_expression
            (expression
              (ident))
            (member_call_operator)
            (expression
              (function_call
                (ident)
                (paren_open)
                (paren_close))))))
      (brace_close))))

=====================================
Chained Member function call
=====================================

main {
  member.call().other_call()
}
---
(source
  (main
    (main_keyword)
    (body
      (brace_open)
      (statement
        (expression
          (member_expression
            (expression
              (member_expression
                (expression
                  (ident))
                (member_call_operator)
                  (expression
                    (function_call
                      (ident)
                      (paren_open)
                      (paren_close)))))

                (member_call_operator)
                (expression
                  (function_call
                    (ident)
                    (paren_open)
                    (paren_close))))))
      (brace_close))))

=====================================
Chained function call with newline
=====================================

main {
  member.call().other_call()
}
---
(source
  (main
    (main_keyword)
    (body
      (brace_open)
      (statement
        (expression
          (member_expression
            (expression
              (member_expression
                (expression
                  (ident))
                (member_call_operator)
                  (expression
                    (function_call
                      (ident)
                      (paren_open)
                      (paren_close)))))

                (member_call_operator)
                (expression
                  (function_call
                    (ident)
                    (paren_open)
                    (paren_close))))))
      (brace_close))))


=====================================
Safe member function call
=====================================

main {
  member?.call()
}
---
(source
  (main
    (main_keyword)
    (body
      (brace_open)
      (statement
        (expression
          (member_expression
            (expression
              (ident))
            (safe_call_operator)
            (expression
              (function_call
                (ident)
                (paren_open)
                (paren_close))))))
      (brace_close))))

=====================================
As second arithmetic operand
=====================================

main {
  a + member.field
}
---
(source
  (main
    (main_keyword)
    (body
      (brace_open)
      (statement
        (expression
          (arithmetic_expression
            (expression
              (ident))
            (plus)
            (expression
              (member_expression
                (expression
                  (ident))
                (member_call_operator)
                (expression
                  (ident)))))))
      (brace_close))))

=====================================
As first arithmetic operand
=====================================

main {
  member.field + a
}
---
(source
  (main
    (main_keyword)
    (body
      (brace_open)
      (statement
        (expression
          (arithmetic_expression
            (expression
              (member_expression
                (expression
                  (ident))
                (member_call_operator)
                (expression
                  (ident))))
            (plus)
            (expression
              (ident)))))
      (brace_close))))


